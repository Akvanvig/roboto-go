# https://dev.to/cloudx/multi-arch-docker-images-the-easy-way-with-github-actions-4k54
name: build-image

# build when a new version is tagged or manually started
on:
  workflow_dispatch: {}
  push:
    branches:
      - 'master'
      - 'main'
    tags:
      - 'v*.*.*'

# permissions needed to push to ghcr repo
permissions:
  packages: write

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
    # https://github.com/marketplace/actions/checkout
    - name: Checkout
      uses: actions/checkout@v3
    # https://github.com/marketplace/actions/docker-setup-qemu
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    # https://github.com/marketplace/actions/docker-setup-buildx
    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v2
    # https://github.com/marketplace/actions/docker-login#github-container-registry
    - name: Login to ghcr
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    # https://github.com/marketplace/actions/docker-metadata-action
    - name: Add docker metadata
      id: metadata
      uses: docker/metadata-action@v4
      with: 
        images: |
          ghcr.io/akvanvig/roboto-go
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=semver,pattern=v{{major}}.{{minor}}
          type=semver,pattern=v{{major}}
          type=sha
    # https://github.com/marketplace/actions/build-and-push-docker-images
    - name: Build and push
      uses: docker/build-push-action@v3
      with: 
        context: .
        file: build/package/docker/Dockerfile
        platforms: 'linux/arm/v7,linux/arm64,linux/amd64'
        #push: ${{ ( github.event_name == 'push' && github.ref_name == 'v*' ) || github.event_name == 'workflow_dispatch' }}
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
